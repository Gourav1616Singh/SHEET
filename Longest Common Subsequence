class Solution {
public:
    
    int lcs(string &text1,string &text2,int i,int j,int dp[][1001])
    {
       
        if(i==text1.size()|| j==text2.size())
            return 0;
        if(dp[i][j]!=-1)
           return dp[i][j];
       
        
        if(text1[i]==text2[j])
            return dp[i][j]= 1+ lcs(text1,text2,i+1,j+1,dp);
        else
            return dp[i][j]= max(lcs(text1,text2,i+1,j,dp),lcs(text1,text2,i,j+1,dp));
        
    }
    
    int longestCommonSubsequence(string text1, string text2) {
        int dp[1001][1001];
         for (int i = 0; i < 1001; i++)
        {
            for (int j = 0; j < 1001; j++)
            {
                dp[i][j] = -1;
            }
        }
        return lcs(text1,text2,0,0,dp);
        
    }
};
